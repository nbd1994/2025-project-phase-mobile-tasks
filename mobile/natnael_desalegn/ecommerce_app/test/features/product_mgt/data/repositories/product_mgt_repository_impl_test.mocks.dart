// Mocks generated by Mockito 5.4.6 from annotations
// in ecommerce_app/test/features/product_mgt/data/repositories/product_mgt_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:ecommerce_app/core/platform/network_info.dart' as _i3;
import 'package:ecommerce_app/features/product_mgt/data/datasources/product_mgt_local_data_source.dart'
    as _i5;
import 'package:ecommerce_app/features/product_mgt/data/datasources/product_mgt_remote_data_source.dart'
    as _i6;
import 'package:ecommerce_app/features/product_mgt/data/models/product_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProductModel_0 extends _i1.SmartFake implements _i2.ProductModel {
  _FakeProductModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i3.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(
            Invocation.getter(#isConnected),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}

/// A class which mocks [ProductMgtLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductMgtLocalDataSource extends _i1.Mock
    implements _i5.ProductMgtLocalDataSource {
  MockProductMgtLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.ProductModel>> getCachedProducts() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedProducts, []),
            returnValue: _i4.Future<List<_i2.ProductModel>>.value(
              <_i2.ProductModel>[],
            ),
          )
          as _i4.Future<List<_i2.ProductModel>>);

  @override
  _i4.Future<void> cacheProducts(List<_i2.ProductModel>? pdts) =>
      (super.noSuchMethod(
            Invocation.method(#cacheProducts, [pdts]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> cacheSingleProduct(_i2.ProductModel? pdt) =>
      (super.noSuchMethod(
            Invocation.method(#cacheSingleProduct, [pdt]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteCachedProduct(_i2.ProductModel? pdt) =>
      (super.noSuchMethod(
            Invocation.method(#deleteCachedProduct, [pdt]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i2.ProductModel> getCachedSingleProduct(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getCachedSingleProduct, [id]),
            returnValue: _i4.Future<_i2.ProductModel>.value(
              _FakeProductModel_0(
                this,
                Invocation.method(#getCachedSingleProduct, [id]),
              ),
            ),
          )
          as _i4.Future<_i2.ProductModel>);
}

/// A class which mocks [ProductMgtRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductMgtRemoteDataSource extends _i1.Mock
    implements _i6.ProductMgtRemoteDataSource {
  MockProductMgtRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ProductModel> deleteProduct(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteProduct, [id]),
            returnValue: _i4.Future<_i2.ProductModel>.value(
              _FakeProductModel_0(
                this,
                Invocation.method(#deleteProduct, [id]),
              ),
            ),
          )
          as _i4.Future<_i2.ProductModel>);

  @override
  _i4.Future<_i2.ProductModel> getProduct(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getProduct, [id]),
            returnValue: _i4.Future<_i2.ProductModel>.value(
              _FakeProductModel_0(this, Invocation.method(#getProduct, [id])),
            ),
          )
          as _i4.Future<_i2.ProductModel>);

  @override
  _i4.Future<_i2.ProductModel> insertProduct(_i2.ProductModel? product) =>
      (super.noSuchMethod(
            Invocation.method(#insertProduct, [product]),
            returnValue: _i4.Future<_i2.ProductModel>.value(
              _FakeProductModel_0(
                this,
                Invocation.method(#insertProduct, [product]),
              ),
            ),
          )
          as _i4.Future<_i2.ProductModel>);

  @override
  _i4.Future<_i2.ProductModel> updateProduct(_i2.ProductModel? product) =>
      (super.noSuchMethod(
            Invocation.method(#updateProduct, [product]),
            returnValue: _i4.Future<_i2.ProductModel>.value(
              _FakeProductModel_0(
                this,
                Invocation.method(#updateProduct, [product]),
              ),
            ),
          )
          as _i4.Future<_i2.ProductModel>);

  @override
  _i4.Future<List<_i2.ProductModel>> getAllProducts() =>
      (super.noSuchMethod(
            Invocation.method(#getAllProducts, []),
            returnValue: _i4.Future<List<_i2.ProductModel>>.value(
              <_i2.ProductModel>[],
            ),
          )
          as _i4.Future<List<_i2.ProductModel>>);
}
